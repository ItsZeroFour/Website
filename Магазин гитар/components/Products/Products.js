class Products {
  constructor() {
    this.classNameActive = "products-element__btn_active";
    this.labelAdd = "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É";
    this.labelRemove = "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã";
  }

  handleSetLocationStorage(element, id) {
    const { pushProduct, products } = localStorageUtil.putProducts(id);

    if (pushProduct === true) {
      element.classList.add(this.classNameActive);
      element.innerHTML = this.labelRemove;
    } else {
      element.classList.remove(this.classNameActive);
      element.innerHTML = this.labelAdd;
    }

    /*
      –ü–µ—Ä–µ–¥–∞–µ–º —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—é–¥–∞ –∏–∑ Header.js –¥–ª—è —Ç–æ–≥–æ,
      —á—Ç–æ –±—ã –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å
    */
    headerPage.render(products.length);
  }

  render() {
    const productsStore = localStorageUtil.getProducts();

    let htmlCatalog = "";
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–æ–∫—É–º–µ–Ω—Ç
    CATALOG.forEach(({ id, name, price, img }) => {
      let activeClass = "";
      let activeText = "";

      if (productsStore.indexOf(id) === -1) {
        activeText = this.labelAdd;
      } else {
        activeClass = this.classNameActive;
        activeText = this.labelRemove;
      }

      htmlCatalog += `
        <li class="products-element">
          <span class="products-element__name">${name}</span>
          <img class="products-element__img" src="${img}">
          <span class="products-element__price">üíé ${price.toLocaleString()} USD</span>
          <!-- this - —É–∑–Ω–∞–µ–º, –ø–æ –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –∫–Ω–æ–ø–∫–µ –º—ã –Ω–∞–∂–∞–ª–∏ -->
          <button class="products-element__btn ${activeClass}" onclick="productsPage.handleSetLocationStorage(this, '${id}')">
            ${activeText}
          </button>
        </li>
      `;
    });

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ HTML –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ç–µ–≥ ul
    const html = `
      <ul class="products-container">
        ${htmlCatalog}
      </ul>
    `;

    ROOT_PRODUCTS.innerHTML = html;
  }
}

// –†–µ–Ω–¥–µ—Ä–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ HTML –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
const productsPage = new Products();
